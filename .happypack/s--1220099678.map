{"version":3,"sources":["src\\router\\guards\\authguards.js"],"names":["store","authguards","to","from","next","matched","some","record","meta","requireAuth","state","token","path","query","redirect","fullPath"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;;AAaA,IAAIC,aAAa,SAAbA,UAAa,CAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AACxC,MAAIF,GAAGG,OAAH,CAAWC,IAAX,CAAgB,UAASC,MAAT,EAAiB;AACnC,WAAOA,OAAOC,IAAP,CAAYC,WAAnB;AACD,GAFG,CAAJ,EAEI;AAEF,QAAIT,MAAMU,KAAN,CAAYC,KAAhB,EAAuB;AAErBP;AACD,KAHD,MAGO;AACLA,WAAK;AACHQ,cAAM,QADH;AAEHC,eAAO,EAACC,UAAUZ,GAAGa,QAAd;AAFJ,OAAL;AAID;AACF,GAbD,MAaO;AACLX;AACD;AACF,CAjBD;;AAmBA,eAAeH,UAAf","file":"authguards.js","sourceRoot":"D:/goods/goodspages","sourcesContent":["import store from '../../store'\n\n/**\n * authguards - 登录权限验证钩子\n *\n * @author pangjian\n * @param  {Route} to         即将要进入的目标 路由对象\n * @param  {Route} from       当前导航正要离开的路由\n * @param  {Function} next    next(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed （确认的）。\n                              next(false): 中断当前的导航。如果浏览器的 URL 改变了（可能是用户手动或者浏览器后退按钮），那么 URL 地址会重置到 from 路由对应的地址。\n                              next('/') 或者 next({ path: '/' }): 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。\n * @return {null} 无返回值\n */\nvar authguards = function(to, from, next) {\n  if (to.matched.some(function(record) {\n    return record.meta.requireAuth\n  })) {\n    // 检查route是否需要登录，需要登录的检查是否已经登录\n    if (store.state.token) {\n      // 已经登录进入下一个路由\n      next()\n    } else {\n      next({\n        path: '/login',\n        query: {redirect: to.fullPath}\n      })\n    }\n  } else {\n    next()\n  }\n}\n\nexport default authguards\n"]}