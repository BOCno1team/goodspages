{"version":3,"sources":["src\\util\\http\\http.bfw.config.js"],"names":["qs","CU","store","bfwConfig","timeout","contentType","baseUrl","reqInterceptors","config","locale","state","method","url","data","params","header","agent","json","stringify","_locale","resInterceptors","res","status","getErr","code","dispatch"],"mappings":";AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,YAAY;AAChBC,WAAS,IADO;AAEhBC,eAAa,mCAFG;AAGhBC,WAAS,EAHO;;AAKhBC,mBAAiB,yBAACC,MAAD,EAAY;AAC3B,QAAIC,SAASP,MAAMQ,KAAN,CAAYD,MAAzB;AACA,QAAIE,SAASH,OAAOI,GAApB;AACAJ,WAAOI,GAAP,GAAa,kBAAb;;AAEA,QAAGJ,OAAOG,MAAP,KAAkB,MAArB,EAA6B;AAC3B,UAAIE,OAAO;AACTF,gBAAQA,MADC;AAETG,gBAAQN,OAAOK,IAFN;AAGTE,gBAAQ;AACNC,iBAAO,KADD;AAENP,kBAAQA;AAFF;AAHC,OAAX;;AASA,UAAIQ,OAAO;AACTA,cAAM,gBAAeJ,IAAf;AADG,OAAX;AAGAL,aAAOK,IAAP,GAAcb,GAAGkB,SAAH,CAAaD,IAAb,CAAd;AACA,UAAIT,OAAOM,MAAX,EAAmB;AACjBN,eAAOM,MAAP,CAAc,QAAd,IAA0BH,MAA1B;AACAH,eAAOM,MAAP,CAAc,SAAd,IAA2BL,MAA3B;AACD,OAHD,MAGO;AACLD,eAAOM,MAAP,GAAgB;AACdH,kBAAQA,MADM;AAEdQ,mBAASV;AAFK,SAAhB;AAID;AACF;AACD,WAAOD,MAAP;AACD,GAnCe;;AAqChBY,mBAAiB,yBAACC,GAAD,EAAS;AACxB,QAAIA,IAAIC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAIrB,GAAGsB,MAAH,CAAUF,GAAV,KAAkBpB,GAAGsB,MAAH,CAAUF,GAAV,EAAeG,IAAf,KAAwB,MAA9C,EAAsD;AACpDtB,cAAMuB,QAAN,CAAe,QAAf;AACD;AACF;AACD,WAAOJ,GAAP;AACD;;AA5Ce,CAAlB;;AAgDA,eAAelB,SAAf","file":"http.bfw.config.js","sourceRoot":"d:/hainan/hn-audit-warning-ui","sourcesContent":["import qs from 'qs'\nimport CU from '../commonutil'\nimport store from '@/store'\n\nconst bfwConfig = {\n  timeout: 5000,\n  contentType: 'application/x-www-form-urlencoded',\n  baseUrl: '',\n\n  reqInterceptors: (config) => {\n    var locale = store.state.locale;\n    var method = config.url;\n    config.url = '/api/_bfwajax.do';\n    // POST传参序列化\n    if(config.method === 'post') {\n      var data = {\n        method: method,\n        params: config.data,\n        header: {\n          agent: \"BFE\",\n          locale: locale\n        }\n      };\n\n      var json = {\n        json: JSON.stringify(data)\n      };\n      config.data = qs.stringify(json);\n      if (config.params) {\n        config.params[\"method\"] = method;\n        config.params[\"_locale\"] = locale;\n      } else {\n        config.params = {\n          method: method,\n          _locale: locale\n        }\n      }\n    }\n    return config;\n  },\n\n  resInterceptors: (res) => {\n    if (res.status === 200) {\n      if (CU.getErr(res) && CU.getErr(res).code === '0107') {\n        store.dispatch('logout');\n      }\n    }\n    return res;\n  }\n\n}\n\nexport default bfwConfig\n"]}